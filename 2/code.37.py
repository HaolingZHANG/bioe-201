from numpy import zeros, max
from typing import Tuple


BLOSUM62 = {
    "A": {"A": +4, "C": +0, "D": -2, "E": -1, "F": -2, "G": +0, "H": -2, "I": -1, "K": -1, "L": -1,
          "M": -1, "N": -2, "P": -1, "Q": -1, "R": -1, "S": +1, "T": +0, "V": +0, "W": -3, "Y": -2},
    "C": {"A": +0, "C": +9, "D": -3, "E": -4, "F": -2, "G": -3, "H": -3, "I": -1, "K": -3, "L": -1,
          "M": -1, "N": -3, "P": -3, "Q": -3, "R": -3, "S": -1, "T": -1, "V": -1, "W": -2, "Y": -2},
    "D": {"A": -2, "C": -3, "D": +6, "E": +2, "F": -3, "G": -1, "H": -1, "I": -3, "K": -1, "L": -4,
          "M": -3, "N": +1, "P": -1, "Q": +0, "R": -2, "S": +0, "T": -1, "V": -3, "W": -4, "Y": -3},
    "E": {"A": -1, "C": -4, "D": +2, "E": +5, "F": -3, "G": -2, "H": +0, "I": -3, "K": +1, "L": -3,
          "M": -2, "N": +0, "P": -1, "Q": +2, "R": +0, "S": +0, "T": -1, "V": -2, "W": -3, "Y": -2},
    "F": {"A": -2, "C": -2, "D": -3, "E": -3, "F": +6, "G": -3, "H": -1, "I": +0, "K": -3, "L": +0,
          "M": +0, "N": -3, "P": -4, "Q": -3, "R": -3, "S": -2, "T": -2, "V": -1, "W": +1, "Y": +3},
    "G": {"A": +0, "C": -3, "D": -1, "E": -2, "F": -3, "G": +6, "H": -2, "I": -4, "K": -2, "L": -4,
          "M": -3, "N": +0, "P": -2, "Q": -2, "R": -2, "S": +0, "T": -2, "V": -3, "W": -2, "Y": -3},
    "H": {"A": -2, "C": -3, "D": -1, "E": +0, "F": -1, "G": -2, "H": +8, "I": -3, "K": -1, "L": -3,
          "M": -2, "N": +1, "P": -2, "Q": +0, "R": +0, "S": -1, "T": -2, "V": -3, "W": -2, "Y": +2},
    "I": {"A": -1, "C": -1, "D": -3, "E": -3, "F": +0, "G": -4, "H": -3, "I": +4, "K": -3, "L": +2,
          "M": +1, "N": -3, "P": -3, "Q": -3, "R": -3, "S": -2, "T": -1, "V": +3, "W": -3, "Y": -1},
    "K": {"A": -1, "C": -3, "D": -1, "E": +1, "F": -3, "G": -2, "H": -1, "I": -3, "K": +5, "L": -2,
          "M": -1, "N": +0, "P": -1, "Q": +1, "R": +2, "S": +0, "T": -1, "V": -2, "W": -3, "Y": -2},
    "L": {"A": -1, "C": -1, "D": -4, "E": -3, "F": +0, "G": -4, "H": -3, "I": +2, "K": -2, "L": +4,
          "M": +2, "N": -3, "P": -3, "Q": -2, "R": -2, "S": -2, "T": -1, "V": +1, "W": -2, "Y": -1},
    "M": {"A": -1, "C": -1, "D": -3, "E": -2, "F": +0, "G": -3, "H": -2, "I": +1, "K": -1, "L": +2,
          "M": +5, "N": -2, "P": -2, "Q": +0, "R": -1, "S": -1, "T": -1, "V": +1, "W": -1, "Y": -1},
    "N": {"A": -2, "C": -3, "D": +1, "E": +0, "F": -3, "G": +0, "H": +1, "I": -3, "K": +0, "L": -3,
          "M": -2, "N": +6, "P": -2, "Q": +0, "R": +0, "S": +1, "T": +0, "V": -3, "W": -4, "Y": -2},
    "P": {"A": -1, "C": -3, "D": -1, "E": -1, "F": -4, "G": -2, "H": -2, "I": -3, "K": -1, "L": -3,
          "M": -2, "N": -2, "P": +7, "Q": -1, "R": -2, "S": -1, "T": -1, "V": -2, "W": -4, "Y": -3},
    "Q": {"A": -1, "C": -3, "D": +0, "E": +2, "F": -3, "G": -2, "H": +0, "I": -3, "K": +1, "L": -2,
          "M": +0, "N": +0, "P": -1, "Q": +5, "R": +1, "S": +0, "T": -1, "V": -2, "W": -2, "Y": -1},
    "R": {"A": -1, "C": -3, "D": -2, "E": +0, "F": -3, "G": -2, "H": +0, "I": -3, "K": +2, "L": -2,
          "M": -1, "N": +0, "P": -2, "Q": +1, "R": +5, "S": -1, "T": -1, "V": -3, "W": -3, "Y": -2},
    "S": {"A": +1, "C": -1, "D": +0, "E": +0, "F": -2, "G": +0, "H": -1, "I": -2, "K": +0, "L": -2,
          "M": -1, "N": +1, "P": -1, "Q": +0, "R": -1, "S": +4, "T": +1, "V": -2, "W": -3, "Y": -2},
    "T": {"A": +0, "C": -1, "D": -1, "E": -1, "F": -2, "G": -2, "H": -2, "I": -1, "K": -1, "L": -1,
          "M": -1, "N": +0, "P": -1, "Q": -1, "R": -1, "S": +1, "T": +5, "V": +0, "W": -2, "Y": -2},
    "V": {"A": +0, "C": -1, "D": -3, "E": -2, "F": -1, "G": -3, "H": -3, "I": +3, "K": -2, "L": +1,
          "M": +1, "N": -3, "P": -2, "Q": -2, "R": -3, "S": -2, "T": +0, "V": +4, "W": -3, "Y": -1},
    "W": {"A": -3, "C": -2, "D": -4, "E": -3, "F": +1, "G": -2, "H": -2, "I": -3, "K": -3, "L": -2,
          "M": -1, "N": -4, "P": -4, "Q": -2, "R": -3, "S": -3, "T": -2, "V": -3, "W": 11, "Y": 2},
    "Y": {"A": -2, "C": -2, "D": -3, "E": -2, "F": +3, "G": -3, "H": +2, "I": -1, "K": -2, "L": -1,
          "M": -1, "N": -2, "P": -3, "Q": -1, "R": -2, "S": -2, "T": -2, "V": -1, "W": +2, "Y": +7}
}


def function(sequence_1: str,
             sequence_2: str,
             indel_penalty: int) \
        -> Tuple[int, str, str]:
    # Initialize scoring matrix.
    score_matrix = zeros((len(sequence_1) + 1, len(sequence_2) + 1), dtype=int)

    # Fill the scoring matrix with initial penalties.
    for index in range(1, len(sequence_1) + 1):
        score_matrix[index][0] = score_matrix[index - 1][0] - indel_penalty
    for index in range(1, len(sequence_1) + 1):
        score_matrix[0][index] = score_matrix[0][index - 1] - indel_penalty

    # Fill in the scoring matrix.
    for index_1 in range(1, len(sequence_1) + 1):
        for index_2 in range(1, len(sequence_2) + 1):
            score_matrix[index_1, index_2] = max([
                score_matrix[index_1 - 1, index_2 - 1] + BLOSUM62[sequence_1[index_1 - 1]][sequence_2[index_2 - 1]],
                score_matrix[index_1 - 1, index_2] - indel_penalty,
                score_matrix[index_1, index_2 - 1] - indel_penalty
            ])

    # Traceback to find the best alignment pair.
    alignment_1, alignment_2, index_1, index_2 = "", "", len(sequence_1), len(sequence_2)

    while index_1 > 0 and index_2 > 0:
        current_score = score_matrix[index_1, index_2]
        score_diag = score_matrix[index_1 - 1, index_2 - 1]
        score_up = score_matrix[index_1, index_2 - 1]
        score_left = score_matrix[index_1 - 1, index_2]

        if current_score == score_diag + BLOSUM62[sequence_1[index_1 - 1]][sequence_2[index_2 - 1]]:
            alignment_1 += sequence_1[index_1 - 1]
            alignment_2 += sequence_2[index_2 - 1]
            index_1 -= 1
            index_2 -= 1
        elif current_score == score_left - indel_penalty:
            alignment_1 += sequence_1[index_1 - 1]
            alignment_2 += "-"
            index_1 -= 1
        elif current_score == score_up - indel_penalty:
            alignment_1 += "-"
            alignment_2 += sequence_2[index_2 - 1]
            index_2 -= 1

    while index_1 > 0:
        alignment_1 += sequence_1[index_1 - 1]
        alignment_2 += "-"
        index_1 -= 1

    while index_2 > 0:
        alignment_1 += "-"
        alignment_2 += sequence_2[index_2 - 1]
        index_2 -= 1

    # Reverse the alignments.
    alignment_1 = alignment_1[::-1]
    alignment_2 = alignment_2[::-1]

    # Maximum score is at bottom-right corner.
    maximum_score = score_matrix[len(sequence_1), len(sequence_2)]

    return int(maximum_score), alignment_1, alignment_2


if __name__ == "__main__":
    p_1 = ("RPDADANMLLLCKCPCNPYHLCDSWFEEMCSGKKRHYKKQFCRLMKLKPGYCLQVSDVPHNKKWEAVCRTQAGILREHPTFSRIVNGYRCHRVHLTIMKYLPKAACM"
           "RSEIFSKWPPIQWHLSIKWDFTSRWATSWIEQKFQAVNNVNRFWWTKVHYKTFNGPDVHVLVHIRTMCKLACMYCVNAPVMRYFWTEIKKLRTRVYKRHVFSNTERC"
           "PHYTLHIGRRADDTDHFKAIQKLHVDNTTYTCATYLLHRRNVQYKYYEQRSWTCFSEGYHHTQTSWHISSMWYPNNGLNQWEENDFISDNVLLCKGALYAIAQVTFM"
           "LISIVGQPWPNDHYSFWNFWCCQNMYEPKITDWNQKSSVSGSGPVKYLKVLYNVTQFYQAVNTPHKSNTCWCPRAPSDWMIYPMYNEDGMFMWMPHCEPIINKKFHA"
           "HSKYICSPATNAWRTMIYVHSQCKHRHIFLSEFNPHCQPVWNLNWAMPVGPISQITVYFSQAWMDEDNPLPLHDRAGCHFRIMSNILARNVAFAHVLLLSSPTIFLH"
           "DRVTMMLEPSVHDLYLNGILGHFHKHIEDCESNWVDTHNVAIDGYVKEEMGARSDLEILWEMAKTWNHTDAYCSHHRMRGPPHLIGGMRCDLHWSKCNGEGYAHLLG"
           "QIRCCAKGGITQIEFHSPLIEQDGKKLRVCYFCYALQYWHSAWHGVDEYIDYILPFAITKTIRIGQVRREIRYPCDKEEMHYQWPLIYIHHFSGTFEKHDDDHNRAG"
           "WRPHSKKGQNRDLNYMNKRIKLACWHCQYILAKWAVRALHDIPPRAYQHSGMEKLDSENWQHPCYHFFLVKSGSRCAWCWDVNIDKYAMFVERPLRVKSYYHWQAGS"
           "LIKWRWKVQYTYLWGIIRCAYNARSSHFFCFLIMGYPNPNWRYAMADALCEHVCDTNVRSTNGHWIADMRGVANKAQQWYTIYHMTAQHYKILGGQRASGPPPDDWG"
           "NHSMYASPCTTNFWNPEGDRWLSNRAGFVGQGKIAQYDGMLFKMHIMWQVQELSSGPEGTMILLHMFLKFVLTSATKANTKPTLFKPKKCSQDAWIDEWWIDAEHND"
           "GARRISPIQLTRYHHTCEAASTVVRFVFPHNHEGRQPHHVAKFQYTPVTVMLKCLNCEDDVWLCNMPGQRIRFGGSFPCQQASTYHIKNNDCKKKHPQQQNIISMCK"
           "PCVICIYWQYIWVTTLFPHLVKNEKDCKACDPVICWMIRKTHNYFVARKPYNHEDENEEGIKTNWPIPMLKEACKGSTEPKHEGMWAKLEPGMTVLLKLIHRLGMRE"
           "NGEECGIGPFQMPTELWCYDHASFGCLYIMQRVKHPLYEVTPQCWSCPCVTVNTKIAWGCPPPSPVCLMVYMCDCLYPIWFFMCDVINPCYYCQWGVAMNRVGVACD"
           "CYWSCHYPEHIGLHACSHSWWENLDCWPQYYPGNTWEWEPWIYEYQSIENMQMLWLKHPDMETQWVFTFIMVANWLYIIGETYGDHEIRWYRAGGSKPCKKSPADDK"
           "PEQHVHQNGKVIPKQTKMVETVMILDTCWQTRYAIKPESDFALNYYLKKVFMNCGLNEGENLCVIEIDFIIPDHENQMNRQDIWSSTAFTPTACMISDCRLVYCMWC"
           "DTEREVFKFMLEWIERIIGAFSFNYMNAMIPTEQICWEFWSIKYHNWDQLTSISLNQFQEDSQEHTPCMHMVNDECIWLACGGLLECQQQIMTEYHWYIKFAPWTKD"
           "HLKISPVARGLPKILFWHESWFPQRCTWVCANEKWRPVTSGIPDKDAMQHYDQCQWIVNLFICYFGCYFQYMEEFWHAMQDKVSCHEHATRQMVHIDCMGMNIMIQY"
           "MRLYQSLHVTASDDSLITVQPNSYPKFWWCCCMFTHLNGQNARVERQDLHYMLDVVSIIRFHWNNPQLCFFIWVANCWDLHHESFLQQKHMKCVRFPRMSAHTQFSI"
           "AYTTLGTFGELSQRDVSSVHDELRAQCKHDNVCFSESQTSHNAHWKKFDNNYGFAMDCEWQMSPCGHKLIRFAHAQPEAYFFIMPLCFWDEQRTLCSSYWWYFSGTT"
           "ISAELGVYDKKRMWHFFFITQARFEDHRGRTTLWCWQYLYTQTSNTVGYQPVCTWVISVVHHTGIVLCCNLMWRWKHADLGVTNAEFRLGELCLWWLHYHNQQHEKG"
           "RSAMPRGYDQQNQLFSPQFWEKHDTCCYSWPHEMNQEGIFLASCNRFCYNHWRPCKIEVLNGDLLKTYAFGQMQINWINLWLIFCPLEMKNNQHSFWMWGMSLHSVD"
           "LAFCDYYVMYGGYPTIPGEEEQISWESLKSEVRCVEINYGVGVFGANPPAQTRADRQIEYKISPDWTPRQVDLQNFCWNQPIHGGEEYVMPGGRYPLQKVWYKRVSG"
           "RGSVQDMKFALMQVDFPSIHIDRTPRQRTIRVASRGIEVLSISMSKQQMSLGEFGVGNIIVKLKTWKCTELDNCSEVNSELNRMKIKFAFFIHMRKSYKRDNCNWHI"
           "GIEPYPWPLKATLKTDIPTIGRCRMNEPGTMQYDHPQAKINWCGQWANKSATMGKFHAVSQRFFDLHPYKMARHLDEAQGVSHTSLTIAAFMHCTEGEWTMVRRTQF"
           "ANCCIRKIDMQQFQHNDFIKTAVCDPNRQFIQNKPCNGVSEGFNGDMIKPTTCQSGIDRNFDARREPTGWPFVWNHEPCHAYQVWPWFHKFFWEWDPIMDCFCNYGV"
           "QYELFFCMIMKVEIPVQRHMMECNVGLCKRGRTFMMQPMGGEAPTFWVFGANRYARGWDMTDDWGMAGVFCVTPYHFHSQIVGGWKWYTSFPIKEWNYYDHRGYSIH"
           "FIFTHELKMSCYPWERTSELLHFVLYPKIEILCPSVEVVLLSPFYGKQTACYYLGDNHQHFLPPVKWQQMMKQRYASCWSDILSKEECPHTGCRAIQWVLSCPAIYS"
           "WWFEWKWEFGYHSTLWCARDDEMANLNKMLIAWLMVESCDEMNVAVSIWCVLMMRDNELEGHPLYFWRTISMTCDYYVGAGRFCTRWICTKSLYEPMRRIFSFQYDR"
           "DPKNFWHYNESTEWGWWHETINCYHYYLLDEVKGQLLHQFHWWRSDRWWVCDYDQTWWHIVWPCADINFIGSEFTDRMPTYWAEEGYNCVFWLAQWDMCHPGTMSQR"
           "QGAFSRTHRTFFYFAMVCICHLEWYDNGPWFQWPYTPWESVLEEHCNLCHQEFEVVLSELVSDAEQMRGIGHMQFEEYDMPYHTSYPAVSWGGWGPKMFWWKGGPDY"
           "TWIWKQPYIHLQDFANIWKDCFSVRFRCYHDPDPPWFAVSAQSMILGIFMEFHSNLNSYSKFPIAKCFFAYEVECFEVRLTYVRWMWWVREQVYCMVSNMTFYTIEM"
           "NRYNAWKWTCMIILFYEIVLHSEAVISNFQTFYFNETSVPTDKTTAAIIMWCHPMELPTDDTNLEVGWNSVPHRCREETEIKTKGNWWNNRFESGSACMVPKGMETP"
           "DLPKLYCDMFKLLLIMRYVEIQSRTAPMQSQNHQEDGTLRQGIHYEGYLILHGNRETECFVMKPDMHENISIFKYLSVMLLWNDNDFTSMMQNITIKIHYNFVSRCW"
           "KENHSRHPGYGFTWWDHNRPAAVWYATTVDLIACSNLGVCALFMKEDSNALDKKTFKMSDREVEMDVSVMYNCQTGP")
    p_2 = ("RPDADAIMHLEFHKGKYVGYKVPCNIFPWWNTMRTCDSWFEEMCSGKKKTMSHSGDGYAMLIGRGLTLMKLKPTYCLTMHGKKWEAVCRTQAGYKQLIAWSLREHIT"
           "FCHRVHIMKYLPKWACWRPIEIFSKWFPIQWTLSIKWDFTSRWATSWIEQKFQAVNNVNKFWWGKVCYKTFQHDPPRVHVLVHIRTIERVCPKCMYCVNAPVIRKLR"
           "TRVYQQRHVFSNTERCRHIGRRADDTDHYDFPQKAIQKCATYLLHRVNVPYKYYEQRSWTTQTSWNLKSRMSDENCFISDNNLLCKGKQGFYAIAQVTFPSGMQQHQ"
           "KGRVGEIWPNDFWNFWCCYEPKSSGFLENSGSAIRFEKAWVPVKYLKVLYNVTQFYQIHLEQGNTPHKSNTCWCIRAMIYPMYNEDGMFMWMPHCHRFHNQKFQFID"
           "ECGTPCGAWKMKFHAHSATNAWRTMIYVHSQCKHRFHFWSEFHCQPFWNLNWIMPCEMCPGWRRAMCITSIYFSQAWMDEDNPLEMLHDRAGCHFRIMSNILRLLLS"
           "PEIIFLHDRVTMPSVHDLYLNGHGDGQPLCHIEDCESLWVDTHYDNVAMFIDGYVLENLHDVPMGARSDLEFSDQEQSMSMLAEMAKTWNHTDAYHRFGPPHLIGGM"
           "RCDLHSGEGYIRCCAKGIEFHSPEKEQDGKLGLKLYPRIYHRIMYALWYWVGAWHGVDEYIDYILPTMRYMARDLTVWTKTIRIGQVPAICWCREIRYPCPKEEMIT"
           "QWPGTFDDFEPKHDDDHNQAGWRIHSKDGQNGDKNYMNKRIKLACWHGQYCLAKWVSYHMPALHDIPPRAYQHSGMEKLNSENWQHPCYHFFLWKSGSRCVNSMNVE"
           "RPQIRVESYYHWLIKWRWKVQLLKNHTYLWGIQVKRNRCAYNARSSHFFCFLIMGYPNPNWRYAMADALCEHVKVLFLGEWVTNVCSRIKKHMFEADMNFHWYTYFH"
           "RAFGASGPPPDDWGNHGQCTTGRSCKFFWNEPDRWLSNRDQNMCITCGGCLEAQNFAGYVTDGMLAFKMHVMWVAFNSCYDVRELSSGPEGTMILLHMFLKFVNVPM"
           "MGQSATKANEKPYLPWGTPVTWKPKKCSQDAWIDEHNDGIRGISPIQCTMYHHTCERFIWLRNGASEFPHNQVATVMLKCLNCRDDYGTYEPWVIRFAGYVSPNVYS"
           "CKKKHPQQQPKFPGIISSCKSDFYIWVPHLYKNEKDCKASAHEEDPVICAMIREDHISNGSWKFPEDENEERIKQSKAKKASRSPVSPEWPIPMLKEAKHEGMCAMT"
           "VLLSLIHRLGMRENGEECGIGPNYMQQCYDHASGVQMGCSLRVKHPLYEADGKKFESTPQCWSCPDVTVNTKIAVPVRSDQSFCPPPSPVWLMVYVQCDCLIWFFMC"
           "DVINPKGSAYYCQWGVAMNRVGLACDCYWSCHYPEHIGLHACSHSWWENQDCYPQYYPGFKNSANVKTTWEPWIYEYIHIENMQMYYKSYFSVWMEIQWVFTFIMYA"
           "NWLSIIGETYIEETQYEPRCCTWHGKKSPAIHQCADDKPNQHKTQTKDVETVMILDGEWQKRYAIKPESVFANNYYLKKVFMNRIPGGMGLNEGENKCMMESMWCTD"
           "DHENQMNGCSTAFYKTLPTATDIMIRIQKNFRHVFKFMLEWCMMRIHVNYMRVAMINLYVVLYKRQPEQICWRFWSIKYHRWDQLCRCSISLGQEDSQLIPHSELHT"
           "PCMHMVNDECIWLACGGLLLGDCCQQQIMTEYHWYIKKDLLKPSLFWHESWFAQRQYEIKAGEMTFVWRPVTSGIPDKDAAQSHRPVVDYRCQWIVNYFICYFDKSN"
           "QWHCYDSVWCEVSEQYMEEFWHAMQDKVSCHLHATRQMVHQDCMGMNIMIQLMRHLYQSLDNVTASDDSLITVQPNSFPKFNGQNARVERQDHHSIRFHCNFMYWLH"
           "HESNLQQKHMKCVRFPRMSAYDDQWHVFSIPWWQRLMCFLRINLELATFDWDWCRGELSQRDVSSVHDELRAQCKHDNVCFSESHNAHFIGIKMDCEIYHRWQMSPC"
           "HFHKLILFNQEFLHVQPEAYRPRDCFWDEEHCYRTLYWPYFSGTTISAELGVYDHSADGFQQSFFITQARFEDHRGCTTLWCWQYLATQKVGDSYQHTRSAGIVPKA"
           "CSTMFVSIVHHTGIVLAFPWGSCNLMWRWKDLQVTNAEFCLGELCLWWLHYHNCQHEKGRSAMPRGYDTGALIDFQNQLFSPVLCFTCCNSIFLWRGSSCNRFCYFH"
           "WRPHKIVNTDLLKTYAFGQKVQINWINLPLEMKNNQHSFWMWGMSLTSVDLAECDYYVMYGPLWKPPTIPGEEEQIWSLKFQREWEFLKSEVRCNYGGAKYAMKDAS"
           "PDWTPRWQGHEDLQNMCWNYPIHGGYGSTCVYVMPGGRYPNQKVWYIRVSGRGSVQDMKFAPKASCYMQVEFPSIHIDHSQITYTNRQRTIRVAEVLSDHALTEMDV"
           "SMSKQQMLGEGNIIVALKTWKCTELDNCSEVYASDLNRMKIKFAFMRRQTQQSYKRDHKRRLCNWHIGIEPYGWPLKATLKTDIPLIGRCRMNEPGTMTKNLWPIII"
           "YKHPQAKYWCMSYSQDAVKSATMGKHPVRGAHAVSQRFFQLKADFWVDRPYASFVDRILMAREAQGVSHTWFCIWSAFMHCTEGEWTCVRRTYFANCCIKIDMQQFQ"
           "FNDFIKTAVCDLNATQRSLPNHLMCARQFIQNKPCNGVSEHFNTQDMIKPTTCQARFEQVGWPFVWNKEPCHAYQYIPGALCDVWWWFHKVDMDCFCNQGVQYELFF"
           "CMIMDVEISVQRHMSECNVGLCKRNLNIRPYQEAPTFHAESDCQIFTDPVFFGANRYDFDHNRQQRGWDMTDCVTPYHFHSQIVGGWKWYTSFPIKEWNYYDHRGVS"
           "IHFILDGRRMCSMPCYPGRHFPVGRVLCDFPIACYYQWDNHQPFLPVKWQQMMKQRYASCSSDHTGCRAIQWILPGYAMNCCPAIYSWWFEWNWEFGYHSTLNRDDE"
           "MANLNKMLVSFGTNVPVSIWLVLMMVNCKCEMPLYFWRTISCDYYVGLGRFCMKWKLTQRWICTKSLYEPMRRRDPKNFWHYNEFTLPMGWRPIFVKVCSALDEVME"
           "HYENHHWFHWWRSDRWWVCDYDMQGGATWWHIVWPIGSMYSVRDEREFRQMFQLIMDRMPHYQREEMCRAEEGYNCVFWGTHTLTHKFYFAMVCICHVCRALWYKDE"
           "SCSNDKHYDNGPWFQWPYTPWESSLEEHCNLCHEYCEPTSDAEQMRGIGHMQFSYPAVSWYWAAKQNQICYRGGPWNDHQDCITKTHNWFVQRCQPYIAKQDMANAW"
           "KDCFGERVNVRFRHDPTPPWFAVSAQSMILGIFMEFHSNIADTCFSTATMWFSILQFDVLTYVRWMWPVRESVYCMSNMTFYTIEMIRYNAWKFYEIVLHSEAVISN"
           "FITLIILVKAMQISIYFNETSVPTDKDTAACITYQTGGCVMWCHPMELPTWLTGDTNLEVGSARIVENSVPHRCREETEIKTKGFWWNNRFEFMVPKGMETQDKCHS"
           "PLWFPKCGVLNGLLIMRTTCLVKSPIQSRTMPMQSQNHQEDGAHMYEGYLSSWLHCLHGNKETECFNMALPDMHEIISTFKYLSVMVHYLLYNDNDFTCMMMQNITT"
           "KIHYNWKENHSWWDHNRPAAVWYATTTCTMVLIACSNLGVCALFMKLRLMARTTKMSSVMYNIQTGP")
    p_3 = 5

    r_1, r_2, r_3 = function(sequence_1=p_1, sequence_2=p_2, indel_penalty=p_3)

    print(r_1)
    print(r_2)
    print(r_3)
